@model BMEDmgt.Areas.MedEngMgt.Models.Contract

@{
    ViewBag.Title = "新增/合約";
}
<link href="~/Content/bootstrap-combobox.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-combobox.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="~/Areas/MedEngMgt/Scripts/ContractCreate.js"></script>
<h2>新增</h2>

@using (Ajax.BeginForm("Create", "Contracts",
                                                 new AjaxOptions
                                                 {
                                                     HttpMethod = "POST",
                                                     LoadingElementId = "imgLOADING",
                                                     OnSuccess = "showmsg"
                                                 }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>合約</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ContractNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContractNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContractName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sdate, "DateTime", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Edate, "DateTime", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Edate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="form-inline">
                @Html.LabelFor(model => model.VendorId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 text-left">
                    @Html.DropDownList("VendorId", ViewData["VendorId"] as SelectList, "", new { @class = "form-control combobox" })
                    @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="form-inline">
                @Html.LabelFor(model => model.EngId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 text-left">
                    @Html.DropDownList("EngId", ViewData["EngId"] as SelectList, "", new { @class = "form-control combobox" })
                    @Html.ValidationMessageFor(model => model.EngId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Status, "Y")正常
                @Html.RadioButtonFor(model => model.Status, "N")終止
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="確定送出" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("回到列表", "Index")
</div>
